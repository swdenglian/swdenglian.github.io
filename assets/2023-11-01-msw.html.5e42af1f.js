import{_ as n,o as s,c as a,a as t}from"./app.52b8e965.js";const e={},p=t(`<p>\u5728\u5F00\u53D1\u7684\u8FC7\u7A0B\u4E2D\uFF0C\u9700\u8981\u4E0E\u670D\u52A1\u7AEF\u5BF9\u63A5\uFF0C\u8FD9\u4E2A\u5DE5\u4F5C\u6D41\u7A0B\u901A\u5E38\u662F\u524D\u7AEF-\u670D\u52A1\u7AEF\u534F\u5B9A\u534F\u8BAE\uFF0C\u670D\u52A1\u7AEF\u6839\u636E\u534F\u8BAE\u5F00\u53D1\u63A5\u53E3\uFF0C\u524D\u7AEF\u6A21\u62DF\u534F\u8BAE\u8FDB\u884C\u5F00\u53D1\u5185\u5BB9\u3002\u8FD9\u4E2A\u8FC7\u7A0B\u4E2D\u524D\u7AEF\u9700\u8981\u6A21\u62DF\u670D\u52A1\u7AEF\u6570\u636E\uFF0C\u6A21\u62DF\u670D\u52A1\u7AEF\u6570\u636E\u7684\u8FC7\u7A0B\u5C31\u53EB\u505AMock\uFF1B\u5E38\u89C1\u7684\u5E93\u662FMock Server Workder\u4E0B\u9762\u7B80\u79F0MSW\uFF1B</p><p>\u8865\u5145\u77E5\u8BC6\uFF1ANext.js \u4F7F\u7528React\u6280\u672F\u6808\uFF0C\u652F\u6301\u670D\u52A1\u7AEF\u6E32\u67D3\uFF08SSR\uFF09\u4E0E\u524D\u7AEF\u6E32\u67D3\uFF08CSR\uFF09;</p><p>\u90A3\u4E48\u6211\u4EECMock\u6570\u636E\u7684\u65F6\u5019\u5C31\u8981\u9488\u5BF9\u8FD92\u79CD\u60C5\u51B5\u8FDB\u884Cmock;</p><p>MSW\u4F9D\u7136\u63D0\u4F9B\u4E862\u79CD\u5E73\u53F0\u4E0B\u7684mock\u65B9\u5F0F\uFF0C\u5E95\u5C42\u903B\u8F91\u90FD\u662F\u62E6\u622A\u5BF9\u5E94\u5E73\u53F0http\u8BF7\u6C42\uFF0C\u7136\u540E\u6A21\u62DF\u53D1\u9001\u6570\u636E\uFF1B</p><h2 id="handlers\u6982\u5FF5" tabindex="-1"><a class="header-anchor" href="#handlers\u6982\u5FF5" aria-hidden="true">#</a> Handlers\u6982\u5FF5</h2><p>Handlers \u662F\u6A21\u62DF\u6D4F\u89C8\u5668\u8BF7\u6C42\u7684\u8FD4\u56DE\u503C\u903B\u8F91\uFF1B\u7C7B\u4F3C\u4E8E\u4E0B\u9762\u8FD9\u6837\uFF1B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> HttpResponse<span class="token punctuation">,</span> http <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;msw&quot;</span>

<span class="token keyword">const</span> mocks <span class="token operator">=</span> <span class="token punctuation">[</span>
    http<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;http://api.example.com/user&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token comment">// \u6A21\u62DF\u83B7\u53D6\u7528\u6237\u6570\u636E</span>
        <span class="token keyword">return</span> HttpResponse<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            id<span class="token operator">:</span> <span class="token string">&#39;15d42a4d-1948-4de4-ba78-b8a893feaf45&#39;</span><span class="token punctuation">,</span>
            firstName<span class="token operator">:</span> <span class="token string">&#39;John&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">]</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> mocks<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6D4F\u89C8\u5668" tabindex="-1"><a class="header-anchor" href="#\u6D4F\u89C8\u5668" aria-hidden="true">#</a> \u6D4F\u89C8\u5668</h2><h3 id="mock\u6570\u636E" tabindex="-1"><a class="header-anchor" href="#mock\u6570\u636E" aria-hidden="true">#</a> Mock\u6570\u636E</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> setupWorker <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;msw/browser&#39;</span><span class="token punctuation">;</span> <span class="token comment">// \u8FD9\u662Fmsw\u63D0\u4F9B\u7684\u6D4F\u89C8\u5668\u7AEFmock</span>
<span class="token keyword">import</span> handlers <span class="token keyword">from</span> <span class="token string">&#39;../handlers&#39;</span><span class="token punctuation">;</span> 

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">setupMock</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setupWorker</span><span class="token punctuation">(</span><span class="token operator">...</span>handlers<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6D4F\u89C8\u5668\u7AEFmock\u8BB0\u5F97\u8981\u521D\u59CB\u5316\u4E00\u4E0B <code>npx msw init &lt;PUBLIC_DIR&gt;</code>; \u7531\u4E8E\u6D4F\u89C8\u5668\u7AEF\u7684\u539F\u7406\u662F\u4F7F\u7528Server Worker\u6765\u5B9E\u73B0\uFF0C\u6240\u4EE5\u8981\u6709\u4E00\u4E2AWorker\u7684\u6267\u884C\u6587\u4EF6\uFF0C\u8FD9\u4E2A\u521D\u59CB\u5316\u52A8\u4F5C\u5C31\u662F\u914D\u7F6E\u4E86Worker\u7684\u521D\u59CB\u5316\u6587\u4EF6\u3002</p><h3 id="\u5728next-js\u5165\u53E3\u542F\u52A8mock" tabindex="-1"><a class="header-anchor" href="#\u5728next-js\u5165\u53E3\u542F\u52A8mock" aria-hidden="true">#</a> \u5728next.js\u5165\u53E3\u542F\u52A8mock</h3><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token comment">// app/layout.tsx</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> setupMock <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../mock/setup&#39;</span><span class="token punctuation">;</span>
<span class="token operator">...</span>

<span class="token function">setupMock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u542F\u7528mock</span>
<span class="token operator">...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4F7F\u7528mock\u6570\u636E" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528mock\u6570\u636E" aria-hidden="true">#</a> \u4F7F\u7528Mock\u6570\u636E</h3><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token string">&#39;use client&#39;</span> <span class="token comment">// \u5728next.js\u4E2D\u4F7F\u7528\u5230BOM\u3001DOM\u7B49\u65B9\u6CD5\u5747\u8981\u58F0\u660Euse client\u544A\u77E5next.js\u8FD9\u662F\u4F7F\u7528\u5728\u5BA2\u6237\u7AEF\u7684</span>
<span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&#39;axios&#39;</span><span class="token punctuation">;</span> <span class="token comment">// \u9009\u62E9\u4F7F\u7528axios\u662F\u4E3A\u4E86\u4E0B\u9762Node\u7AEF\u7684\u65F6\u5019\u907F\u514D\u4E00\u4E2A\u5751\uFF0C\u4E0B\u9762\u4ECB\u7ECD</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;http://api.example.com/user&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>data\uFF1B
<span class="token punctuation">}</span>

<span class="token keyword">const</span> Button<span class="token operator">:</span>React<span class="token punctuation">.</span><span class="token constant">FC</span><span class="token operator">&lt;</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>getUser<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">get user</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">;</span> <span class="token comment">// \u8FD9\u91CC\u4F7F\u7528\u4E86onClick\u662F\u6D4F\u89C8\u5668\u4E8B\u4EF6\uFF0C\u6240\u4EE5\u4E0A\u9762\u8981\u58F0\u660Euse client</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="node" tabindex="-1"><a class="header-anchor" href="#node" aria-hidden="true">#</a> Node</h2><h3 id="mock\u6570\u636E-1" tabindex="-1"><a class="header-anchor" href="#mock\u6570\u636E-1" aria-hidden="true">#</a> mock\u6570\u636E</h3><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> setupServer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;msw/node&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> handlers <span class="token keyword">from</span> <span class="token string">&#39;../handlers&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">setupMock</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setupServer</span><span class="token punctuation">(</span><span class="token operator">...</span>handlers<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5728next-js\u5165\u53E3\u542F\u52A8mock-1" tabindex="-1"><a class="header-anchor" href="#\u5728next-js\u5165\u53E3\u542F\u52A8mock-1" aria-hidden="true">#</a> \u5728next.js\u5165\u53E3\u542F\u52A8mock</h3><p>\u540C\u6D4F\u89C8\u5668\u4E2D\uFF0C\u4E0D\u91CD\u590D\u4E86</p><h3 id="\u4F7F\u7528mock\u6570\u636E-1" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528mock\u6570\u636E-1" aria-hidden="true">#</a> \u4F7F\u7528Mock\u6570\u636E</h3><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token comment">// app/page.tsx</span>
<span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&#39;axios&#39;</span><span class="token punctuation">;</span> 

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;http://api.example.com/user&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>data
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">Home</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Next.js \u670D\u52A1\u7AEF\u6E32\u67D3\u9884\u5148\u83B7\u53D6\u670D\u52A1\u7AEF\u6570\u636E</span>
  <span class="token keyword">const</span> id <span class="token operator">=</span> res<span class="token punctuation">.</span>id<span class="token punctuation">;</span>
  
  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>id<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><p>\u6CE8\u610F\uFF0C\u4E0D\u8981\u4F7F\u7528 Fetch API\uFF01mws \u662F\u901A\u8FC7\u62E6\u622A Node \u7684 <code>http</code>/<code>https</code> module \u5B9E\u73B0 API Mocking \u7684\uFF0C\u56E0\u6B64 Node \u4E2D\u539F\u751F\u652F\u6301\u7684 fetch API \u4F1A Mock \u5931\u8D25\u7684\u3002\u8FD9\u91CC\u662F\u501F\u52A9axios\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898</p><hr><h2 id="next-js-\u65B9\u6848\u603B\u548C" tabindex="-1"><a class="header-anchor" href="#next-js-\u65B9\u6848\u603B\u548C" aria-hidden="true">#</a> Next.js \u65B9\u6848\u603B\u548C</h2><p>\u9700\u8981\u6709\u4E00\u4E2A\u4E2D\u95F4\u6587\u4EF6\u6765\u603B\u548C\u670D\u52A1\u7AEF\u4E8E\u6D4F\u89C8\u5668\u7684\u60C5\u51B5\uFF0C\u8BA9\u4E1A\u52A1\u5F00\u53D1\u4E0D\u9700\u8981\u8003\u8651\u73AF\u5883\u7684\u5F71\u54CD\u3002</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token comment">// \u5F00\u53D1\u73AF\u5883(development)\u4E0B\u9ED8\u8BA4\u4E3A YES; \u975E\u5F00\u53D1\u73AF\u5883\u4E0B\u9ED8\u8BA4\u4E3A NO;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token constant">NODE_ENV</span><span class="token punctuation">,</span> <span class="token constant">USE_MOCK</span> <span class="token operator">=</span> <span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">&#39;development&#39;</span> <span class="token operator">?</span> <span class="token string">&#39;YES&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;NO&#39;</span> <span class="token punctuation">}</span> <span class="token operator">=</span> process<span class="token punctuation">.</span>env<span class="token punctuation">;</span>

<span class="token comment">// \u603B\u548CsetupMock\uFF1B\u5224\u65AD\u5F53\u524D\u7684\u73AF\u5883\u4F7F\u7528\u4E0D\u540C\u7684mock\u65B9\u5F0F</span>
<span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">setupMock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">USE_MOCK</span> <span class="token operator">===</span> <span class="token string">&#39;YES&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> <span class="token punctuation">{</span> setupMock <span class="token punctuation">}</span> <span class="token operator">=</span>
            <span class="token keyword">typeof</span> window <span class="token operator">!==</span> <span class="token string">&#39;undefined&#39;</span> <span class="token operator">?</span>
                <span class="token keyword">await</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;./setupBrower&#39;</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">await</span> <span class="token keyword">await</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;./setupNode&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token function">setupMock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;MSW: OPEN&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5165\u53E3\u4E2D\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#\u5165\u53E3\u4E2D\u4F7F\u7528" aria-hidden="true">#</a> \u5165\u53E3\u4E2D\u4F7F\u7528</h3><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token comment">// app/layout.tsx</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> setupMock <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../mock/setup&#39;</span><span class="token punctuation">;</span>
<span class="token operator">...</span>

<span class="token keyword">await</span> <span class="token function">setupMock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u542F\u7528mock; \u8FD9\u91CC\u8BB0\u5F97await \u56E0\u4E3A\u5728\u4E0A\u603B\u548C\u7684\u90E8\u5206\u4F7F\u7528\u4E86 import()\u6309\u9700\u52A0\u8F7D\u6240\u8981\u7684\u6587\u4EF6\uFF0C\u6240\u4EE5\u8981\u7B49\u5F85\u521D\u59CB\u5316\u7ED3\u675F</span>
<span class="token operator">...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>MSW\u7684\u4F7F\u7528\u4ECB\u7ECD\u4E0E\u524D\u7AEFMock\u6570\u636E\u7684\u5185\u5BB9\u5230\u6B64\u7ED3\u675F\uFF0C\u8C22\u8C22\u89C2\u770B\uFF1B</p>`,31),o=[p];function c(i,l){return s(),a("div",null,o)}var r=n(e,[["render",c],["__file","2023-11-01-msw.html.vue"]]);export{r as default};
