import{_ as n,o as s,c as a,a as t}from"./app.52b8e965.js";const e={},p=t(`<h2 id="\u8BED\u6CD5\u5BF9\u6BD4\u624B\u518C-es6-\u89C6\u89D2" tabindex="-1"><a class="header-anchor" href="#\u8BED\u6CD5\u5BF9\u6BD4\u624B\u518C-es6-\u89C6\u89D2" aria-hidden="true">#</a> \u8BED\u6CD5\u5BF9\u6BD4\u624B\u518C\uFF08ES6+ \u89C6\u89D2\uFF09</h2><table><thead><tr><th>\u529F\u80FD\u573A\u666F</th><th>JavaScript (ES6+)</th><th>Python (3.9+)</th><th>\u5173\u952E\u5DEE\u5F02\u8BF4\u660E</th></tr></thead><tbody><tr><td><strong>\u53D8\u91CF\u5B9A\u4E49</strong></td><td><code>const</code> / <code>let</code>\uFF08\u5757\u7EA7\u4F5C\u7528\u57DF\uFF09</td><td>\u76F4\u63A5\u8D4B\u503C\uFF08\u65E0\u5173\u952E\u5B57\uFF0C\u4F5C\u7528\u57DF\u7531\u4EE3\u7801\u5757\u51B3\u5B9A\uFF09</td><td>Python \u6CA1\u6709\u53D8\u91CF\u58F0\u660E\u5173\u952E\u5B57</td></tr><tr><td><strong>\u51FD\u6570\u5B9A\u4E49</strong></td><td>\u7BAD\u5934\u51FD\u6570\uFF1A<code>const fn = () =&gt; {}</code></td><td><code>def fn():</code> + \u7F29\u8FDB</td><td>Python \u4F7F\u7528\u7F29\u8FDB\u5B9A\u4E49\u51FD\u6570\u4F53</td></tr><tr><td><strong>\u6761\u4EF6\u8BED\u53E5</strong></td><td><code>if (condition) { ... } else { ... }</code></td><td><code>if condition: ... else: ...</code></td><td>\u5192\u53F7\u66FF\u4EE3\u5927\u62EC\u53F7</td></tr><tr><td><strong>\u6A21\u677F\u5B57\u7B26\u4E32</strong></td><td><code>\`Hello \${name}\`</code></td><td><code>f&quot;Hello {name}&quot;</code></td><td>\u683C\u5F0F\u5316\u5B57\u7B26\u4E32\u524D\u7F00\u5DEE\u5F02</td></tr><tr><td><strong>\u5FAA\u73AF\u8FED\u4EE3</strong></td><td><code>for...of</code>\uFF08\u53EF\u8FED\u4EE3\u5BF9\u8C61\uFF09</td><td><code>for item in iterable:</code></td><td>\u8BED\u6CD5\u7ED3\u6784\u9AD8\u5EA6\u76F8\u4F3C</td></tr><tr><td><strong>\u89E3\u6784\u8D4B\u503C</strong></td><td><code>const { prop } = obj;</code></td><td><code>prop = obj[&quot;prop&quot;]</code> \u6216\u76F4\u63A5\u5C5E\u6027\u8BBF\u95EE</td><td>Python \u9700\u8981\u663E\u5F0F\u8BBF\u95EE</td></tr><tr><td><strong>\u7C7B\u5B9A\u4E49</strong></td><td><code>class X { constructor() { ... } }</code></td><td><code>class X: def __init__(self): ...</code></td><td>self \u53C2\u6570\u4E0E\u521D\u59CB\u5316\u65B9\u6CD5\u5DEE\u5F02</td></tr><tr><td><strong>\u6A21\u5757\u7CFB\u7EDF</strong></td><td>ES\u6A21\u5757\uFF1A<code>import module from &#39;module&#39;</code></td><td><code>import module</code></td><td>\u5BFC\u5165\u673A\u5236\u4E0E\u8DEF\u5F84\u89E3\u6790\u5DEE\u5F02</td></tr><tr><td><strong>\u5F02\u6B65\u64CD\u4F5C</strong></td><td><code>async/await</code> + <code>Promise</code></td><td><code>async/await</code> + \u534F\u7A0B</td><td>\u4E8B\u4EF6\u5FAA\u73AF\u5B9E\u73B0\u65B9\u5F0F\u4E0D\u540C</td></tr><tr><td><strong>\u5C55\u5F00\u8FD0\u7B97\u7B26</strong></td><td><code>[...arr, newItem]</code> / <code>{...obj, key: val}</code></td><td><code>[*arr, new_item]</code> / <code>{**dict, key: val}</code></td><td>\u8BED\u6CD5\u7B26\u53F7\u5DEE\u5F02</td></tr><tr><td><strong>\u751F\u6210\u5668</strong></td><td><code>function* gen() { yield value; }</code></td><td><code>def gen(): yield value</code></td><td>\u8BED\u6CD5\u58F0\u660E\u65B9\u5F0F\u4E0D\u540C</td></tr><tr><td><strong>\u9519\u8BEF\u5904\u7406</strong></td><td><code>try { ... } catch (e) { ... }</code></td><td><code>try: ... except Exception as e: ...</code></td><td>\u5F02\u5E38\u6355\u83B7\u5173\u952E\u5B57\u5DEE\u5F02</td></tr></tbody></table><h3 id="\u53D8\u91CF\u5B9A\u4E49" tabindex="-1"><a class="header-anchor" href="#\u53D8\u91CF\u5B9A\u4E49" aria-hidden="true">#</a> \u53D8\u91CF\u5B9A\u4E49</h3><h4 id="javascript" tabindex="-1"><a class="header-anchor" href="#javascript" aria-hidden="true">#</a> JavaScript</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="python" tabindex="-1"><a class="header-anchor" href="#python" aria-hidden="true">#</a> Python</h4><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token number">1</span>
b <span class="token operator">=</span> <span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u51FD\u6570\u5B9A\u4E49" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u5B9A\u4E49" aria-hidden="true">#</a> \u51FD\u6570\u5B9A\u4E49</h3><h4 id="javascript-1" tabindex="-1"><a class="header-anchor" href="#javascript-1" aria-hidden="true">#</a> Javascript</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">add</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="python-1" tabindex="-1"><a class="header-anchor" href="#python-1" aria-hidden="true">#</a> python</h4><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">add</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">return</span> a <span class="token operator">+</span> b

<span class="token keyword">print</span><span class="token punctuation">(</span>add<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6761\u4EF6\u8BED\u53E5" tabindex="-1"><a class="header-anchor" href="#\u6761\u4EF6\u8BED\u53E5" aria-hidden="true">#</a> \u6761\u4EF6\u8BED\u53E5</h3><h4 id="javascript-2" tabindex="-1"><a class="header-anchor" href="#javascript-2" aria-hidden="true">#</a> JavaScript</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>age <span class="token operator">&gt;</span> <span class="token number">18</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u6210\u5E74\u4EBA&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u4F60\u662F\u975E\u6210\u5E74\u4EBA&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="python-2" tabindex="-1"><a class="header-anchor" href="#python-2" aria-hidden="true">#</a> Python</h4><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">if</span> age <span class="token operator">&gt;</span> <span class="token number">18</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\u6210\u5E74\u4EBA&quot;</span><span class="token punctuation">)</span>
esle<span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\u4F60\u662F\u975E\u6210\u5E74\u4EBA&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6A21\u677F\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#\u6A21\u677F\u5B57\u7B26\u4E32" aria-hidden="true">#</a> \u6A21\u677F\u5B57\u7B26\u4E32</h3><h4 id="javascript-3" tabindex="-1"><a class="header-anchor" href="#javascript-3" aria-hidden="true">#</a> JavaScript</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> yourName <span class="token operator">=</span> <span class="token string">&quot;John&quot;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Hello </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>yourName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="python-3" tabindex="-1"><a class="header-anchor" href="#python-3" aria-hidden="true">#</a> Python</h4><div class="language-Paython ext-Paython line-numbers-mode"><pre class="language-Paython"><code>your_name = &quot;John&quot;
print(f&#39;Hello {your_name}&#39;)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5FAA\u73AF\u8FED\u4EE3" tabindex="-1"><a class="header-anchor" href="#\u5FAA\u73AF\u8FED\u4EE3" aria-hidden="true">#</a> \u5FAA\u73AF\u8FED\u4EE3</h3><h4 id="javascript-4" tabindex="-1"><a class="header-anchor" href="#javascript-4" aria-hidden="true">#</a> JavaScript</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">i \u7684\u503C\u4E3A\uFF1A</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="python-4" tabindex="-1"><a class="header-anchor" href="#python-4" aria-hidden="true">#</a> Python</h4><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;i \u7684\u503C\u4E3A\uFF1A</span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u7C7B\u5B9A\u4E49" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u5B9A\u4E49" aria-hidden="true">#</a> \u7C7B\u5B9A\u4E49</h3><h4 id="javascript-5" tabindex="-1"><a class="header-anchor" href="#javascript-5" aria-hidden="true">#</a> Javascript</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> name <span class="token operator">=</span> <span class="token string">&quot;&quot;</span>
  <span class="token keyword">private</span> age <span class="token operator">=</span> <span class="token number">0</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name
    <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>age
  <span class="token punctuation">}</span>

  <span class="token keyword">get</span> <span class="token function">personName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name
  <span class="token punctuation">}</span>

  <span class="token keyword">set</span> <span class="token function">personName</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u4F7F\u7528\u793A\u4F8B</span>
<span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">&quot;Alice&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>personName<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;ALICE&quot;\uFF08\u81EA\u52A8\u8C03\u7528 getter\uFF09</span>
p<span class="token punctuation">.</span>personName <span class="token operator">=</span> <span class="token string">&quot; Bob &quot;</span><span class="token punctuation">;</span>    <span class="token comment">// \u81EA\u52A8\u8C03\u7528 setter</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>personName<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;BOB&quot;\uFF08setter \u5904\u7406\u540E\u7684\u503C\uFF09</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="python-5" tabindex="-1"><a class="header-anchor" href="#python-5" aria-hidden="true">#</a> Python</h4><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Person</span><span class="token punctuation">:</span>

  <span class="token comment"># \u6784\u9020\u5668</span>
  <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> name<span class="token punctuation">,</span> age<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># \u79C1\u6709\u6210\u5458\u901A\u8FC7\u53CC\u4E0B\u5212\u7EBF __ \u524D\u7F00\u58F0\u660E</span>
    <span class="token comment"># self \u53C2\u6570\u8868\u793A\u5B9E\u4F8B\u672C\u8EAB</span>
    <span class="token comment"># \u6210\u5458\u53D8\u91CF\u5728\u6784\u9020\u51FD\u6570\u4E2D\u76F4\u63A5\u521D\u59CB\u5316\uFF0C\u65E0\u9700\u63D0\u524D\u58F0\u660E</span>
    self<span class="token punctuation">.</span>__name <span class="token operator">=</span> name
    self<span class="token punctuation">.</span>__age <span class="token operator">=</span> age
    
  <span class="token keyword">def</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> self<span class="token punctuation">.</span>__name
    
  <span class="token keyword">def</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> self<span class="token punctuation">.</span>__age
    
  <span class="token decorator annotation punctuation">@property</span>
  <span class="token keyword">def</span> <span class="token function">persion_name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> self<span class="token punctuation">.</span>__name
    
  <span class="token decorator annotation punctuation">@person_name<span class="token punctuation">.</span>setter</span>
  <span class="token keyword">def</span> <span class="token function">person_name</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">:</span>
    self<span class="token punctuation">.</span>__name <span class="token operator">=</span> new_name<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>
    
<span class="token comment"># \u4F7F\u7528\u793A\u4F8B</span>
p <span class="token operator">=</span> Person<span class="token punctuation">(</span><span class="token string">&quot;Alice&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>person_name<span class="token punctuation">)</span>  <span class="token comment"># &quot;ALICE&quot;\uFF08\u901A\u8FC7 @property \u8BBF\u95EE\uFF09</span>
p<span class="token punctuation">.</span>person_name <span class="token operator">=</span> <span class="token string">&quot; Bob &quot;</span>  <span class="token comment"># \u901A\u8FC7 setter \u4FEE\u6539</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>person_name<span class="token punctuation">)</span>  <span class="token comment"># &quot;BOB&quot;\uFF08\u5904\u7406\u540E\u7684\u503C\uFF09</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6A21\u5757\u7CFB\u7EDF" tabindex="-1"><a class="header-anchor" href="#\u6A21\u5757\u7CFB\u7EDF" aria-hidden="true">#</a> \u6A21\u5757\u7CFB\u7EDF</h3><h4 id="javascript-6" tabindex="-1"><a class="header-anchor" href="#javascript-6" aria-hidden="true">#</a> Javascript</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// mathUtils.js</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> a <span class="token operator">+</span> b
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">publicFunc</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">privateFunc</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>

<span class="token comment">// main.js</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> add<span class="token punctuation">,</span> publicFunc <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./mainUtils.js&#39;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token function">publicFunc</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="python-6" tabindex="-1"><a class="header-anchor" href="#python-6" aria-hidden="true">#</a> Python</h4><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment"># math_unitls.py</span>
__all__ <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;add&quot;</span><span class="token punctuation">]</span>

<span class="token keyword">def</span> <span class="token function">add</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">return</span> a <span class="token operator">+</span> b
  
<span class="token keyword">def</span> <span class="token function">pubic_func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">pass</span>
  
<span class="token comment"># \u4EE5 _ \u5F00\u5934\u4E0D\u4F1A\u88AB\u5BFC\u5165</span>
<span class="token keyword">def</span> <span class="token function">_private_func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">pass</span>

<span class="token comment"># main.py</span>
<span class="token keyword">from</span> math_utils <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>add<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> 
<span class="token keyword">print</span><span class="token punctuation">(</span>pubic_func<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5F02\u6B65\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u5F02\u6B65\u64CD\u4F5C" aria-hidden="true">#</a> \u5F02\u6B65\u64CD\u4F5C</h3><h4 id="javascript-7" tabindex="-1"><a class="header-anchor" href="#javascript-7" aria-hidden="true">#</a> Javascript</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token parameter">time</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> time<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">await</span> <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Hello async/await&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="python-7" tabindex="-1"><a class="header-anchor" href="#python-7" aria-hidden="true">#</a> Python</h4><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> asyncio

<span class="token keyword">def</span> <span class="token function">sleep</span><span class="token punctuation">(</span>milliseconds<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># \u521B\u5EFA\u672A\u5B8C\u6210\u7684 Future \u5BF9\u8C61</span>
    future <span class="token operator">=</span> asyncio<span class="token punctuation">.</span>get_event_loop<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>create_future<span class="token punctuation">(</span><span class="token punctuation">)</span>
    
    <span class="token comment"># \u8BBE\u7F6E\u5B9A\u65F6\u5668\u56DE\u8C03\uFF08\u6CE8\u610F\u65F6\u95F4\u5355\u4F4D\u8F6C\u6362\uFF1A\u6BEB\u79D2\u2192\u79D2\uFF09</span>
    asyncio<span class="token punctuation">.</span>get_event_loop<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>call_later<span class="token punctuation">(</span>
        milliseconds <span class="token operator">/</span> <span class="token number">1000</span><span class="token punctuation">,</span> 
        future<span class="token punctuation">.</span>set_result<span class="token punctuation">,</span>  <span class="token comment"># \u5B9A\u65F6\u7ED3\u675F\u540E\u5B8C\u6210 Future</span>
        <span class="token boolean">None</span>
    <span class="token punctuation">)</span>
    <span class="token keyword">return</span> future

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">await</span> sleep<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span>  <span class="token comment"># \u7B49\u5F85 1000 \u6BEB\u79D2\uFF081 \u79D2\uFF09</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Hello async/await&quot;</span><span class="token punctuation">)</span>

asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># \u8F93\u51FA\uFF1AHello async/await\uFF081 \u79D2\u540E\uFF09</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,42),o=[p];function c(i,l){return s(),a("div",null,o)}var d=n(e,[["render",c],["__file","2025_01_25_python_study.html.vue"]]);export{d as default};
